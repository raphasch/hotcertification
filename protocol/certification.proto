syntax = "proto3";

package protocol;

import "gorums.proto";

option go_package = "github.com/raphasch/hotcertification/protocol";

// client-facing interface definition (API)
service Certification {
    // asynchronous call to all replicas which returns a fully signed certificate as soon as a threshold of replicas responds
    rpc GetCertificate(Request) returns (Reply) {
        option (gorums.quorumcall) = true;
        option (gorums.async) = true;
    }
}

message Request {
    uint32 ClientID = 1;
    uint64 SequenceNumber = 2;
    string Data = 3;
}

// for unmarshalling batches of requests, when executing after replication
message Batch { repeated Request Requests = 1; }

message Reply {
    string Data = 1;
}